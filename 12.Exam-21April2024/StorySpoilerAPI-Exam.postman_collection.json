{
	"info": {
		"_postman_id": "521634da-9780-4889-ab6e-2e11851823ed",
		"name": "StorySpoilerAPI-Exam",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "28660138"
	},
	"item": [
		{
			"name": "Login and Authentication",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", () => {\r",
							"    pm.response.to.have.status(200)\r",
							"})\r",
							"\r",
							"const responseData = pm.response.json();\r",
							"\r",
							"pm.test(\"Response body has correct data\", () => {\r",
							"    pm.expect(responseData).to.have.property(\"username\")\r",
							"    pm.expect(responseData).to.have.property(\"password\")\r",
							"    pm.expect(responseData).to.have.property(\"accessToken\")\r",
							"})\r",
							"\r",
							"pm.collectionVariables.set(\"token\", responseData.accessToken)"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"userName\": \"Your username here...\",\r\n    \"password\": \"Your password here...\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseUrl}}/api/User/Authentication",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"api",
						"User",
						"Authentication"
					]
				}
			},
			"response": []
		},
		{
			"name": "Create a New Spoiler",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"var randomNum = Math.floor(Math.random()*1000)\r",
							"var randomTitle = \"Title\" + randomNum\r",
							"\r",
							"pm.collectionVariables.set(\"randomTitle\", randomTitle)"
						],
						"type": "text/javascript",
						"packages": {}
					}
				},
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 201\", () => {\r",
							"    pm.response.to.have.status(201)\r",
							"})\r",
							"\r",
							"const responseData = pm.response.json();\r",
							"\r",
							"pm.test(\"Response message is 'Successfully created!'\", () => {\r",
							"    pm.expect(responseData.msg).to.eql(\"Successfully created!\")\r",
							"})\r",
							"\r",
							"pm.collectionVariables.set(\"storyId\", responseData.storyId)"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"title\": \"{{randomTitle}}\",\r\n    \"description\": \"Description for the {{randomTitle}}\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseUrl}}/api/Story/Create",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"api",
						"Story",
						"Create"
					]
				}
			},
			"response": []
		},
		{
			"name": "Search for the Created Story Spoiler by Title",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Code is 200\", () => {\r",
							"    pm.response.to.have.status(200)\r",
							"})\r",
							"\r",
							"const responseData = pm.response.json()\r",
							"\r",
							"pm.test(\"Response is an Array and contains the story Title\", () => {\r",
							"    const randomStoryTitle = pm.collectionVariables.get(\"randomTitle\")\r",
							"    pm.expect(responseData[0].title).to.eql(randomStoryTitle)\r",
							"})"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{baseUrl}}/api/Story/Search?keyword={{randomTitle}}",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"api",
						"Story",
						"Search"
					],
					"query": [
						{
							"key": "keyword",
							"value": "{{randomTitle}}"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Edit the Created Story Spoiler",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", () => {\r",
							"    pm.response.to.have.status(200)\r",
							"})\r",
							"\r",
							"const responseData = pm.response.json()\r",
							"\r",
							"pm.test(\"Response message is 'Successfully edited'\", () => {\r",
							"    pm.expect(responseData.msg).to.eql(\"Successfully edited\")\r",
							"})"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"title\": \"{{randomTitle}} EDITED!\",\r\n    \"description\": \"Description of the {{randomTitle}}\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseUrl}}/api/Story/Edit/{{storyId}}",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"api",
						"Story",
						"Edit",
						"{{storyId}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Delete the Edited Story Spoiler",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Code is 200\", () => {\r",
							"    pm.response.to.have.status(200)\r",
							"})\r",
							"\r",
							"const responseData = pm.response.json()\r",
							"\r",
							"pm.test(\"Response message is correct\", () => {\r",
							"    pm.expect(responseData.msg).to.eql(\"Deleted successfully!\")\r",
							"})"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [],
				"url": {
					"raw": "{{baseUrl}}/api/Story/Delete/{{storyId}}",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"api",
						"Story",
						"Delete",
						"{{storyId}}"
					]
				}
			},
			"response": []
		}
	],
	"auth": {
		"type": "bearer",
		"bearer": [
			{
				"key": "token",
				"value": "{{token}}",
				"type": "string"
			}
		]
	},
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"packages": {},
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"packages": {},
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"key": "baseUrl",
			"value": "https://d5wfqm7y6yb3q.cloudfront.net",
			"type": "string"
		},
		{
			"key": "token",
			"value": ""
		},
		{
			"key": "randomTitle",
			"value": ""
		},
		{
			"key": "storyId",
			"value": ""
		}
	]
}